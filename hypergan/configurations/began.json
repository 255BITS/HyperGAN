{
  "description": "Boundary Equilibrium GAN.  Uses an internal autoencoder",
  "publication": "https://arxiv.org/abs/1703.10717",
  "discriminator": 
  {
    "class": "class:hypergan.discriminators.autoencoder_discriminator.AutoencoderDiscriminator",
    "layers": 5,
    "distance": "function:hypergan.discriminators.autoencoder_discriminator.l1_distance",
    "block": "function:hypergan.discriminators.common.standard_block",
    "initial_depth": 64,
    "activation": "lrelu",
    "noise": 1e-2,
    "layer_regularizer": "layer_norm",
    "depth_increase": 64
  },
  "encoder":
  {
    "class": "function:hypergan.encoders.uniform_encoder.UniformEncoder",
    "projections": [
      "function:hypergan.encoders.uniform_encoder.identity"
    ],
    "min": -1,
    "max": 1,
    "z": 100
  },
  "generator": {
    "class": "function:hypergan.generators.resize_conv_generator.ResizeConvGenerator",
    "layer_regularizer": "layer_norm",
    "activation": "lrelu",
    "final_activation": "tanh",
    "depth_increase": 64,
    "final_depth": 64,
    "block": "function:hypergan.generators.common.standard_block",
    "initializer": "random_normal",
    "random_stddev": 0.02
  },
  "loss":
  {
    "class": "function:hypergan.losses.boundary_equilibrium_loss.BoundaryEquilibriumLoss",
    "reduce": "reduce_mean",
    "use_k": true,
    "gamma": 0.01,
    "initial_k": 0.001,
    "type": "wgan",
    "k_lambda": 0.001,
    "labels": [
      0,
      1,
      1
    ]
  },
  "trainer": {
    "class": "class:hypergan.trainers.alternating_trainer.AlternatingTrainer",
    "d_beta1": 0.5,
    "d_learn_rate": 0.00008,
    "d_trainer": "class:tensorflow.python.training.adam.AdamOptimizer",
    "g_beta1": 0.5,
    "g_learn_rate": 0.00008,
    "g_trainer": "class:tensorflow.python.training.adam.AdamOptimizer"
  }
}
